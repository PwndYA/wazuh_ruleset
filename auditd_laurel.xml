<group name="audit,">
<!-- GROUPING -->

  <!-- SYSCALL -->
  <!-- This rule is triggered when a system call is made. System calls are how a program requests a service from the kernel. -->
  <rule id="200110" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","SYSCALL</regex>
    <description>Grouping Laurel AuditD SYSCALL</description>
    <group>syscall,</group>
  </rule>

  <!-- SERVICE START -->
  <!-- This rule is triggered when a service is started on the system. -->
  <rule id="200111" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","SERVICE_START</regex>
    <description>Grouping Laurel AuditD SERVICE START</description>
    <group>service_start,</group>
  </rule>

  <!-- SERVICE STOP -->
  <!-- This rule is triggered when a service is stopped on the system. -->

  <rule id="200112" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","SERVICE_STOP</regex>
    <description>Grouping Laurel AuditD SERVICE STOP</description>
    <group>service_stop,</group>
  </rule>

  <!-- USER_ACCT -->
  <!-- This rule is triggered when a user account is accessed. This could be when a user logs in, or when a user account is modified. -->

  <rule id="200113" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","USER_ACCT</regex>
    <description>Grouping Laurel AuditD USER ACCT</description>
    <group>user_acct,</group>
  </rule>

  <!-- CRED_ACQ -->
  <!-- This rule is triggered when a process acquires credentials, such as when a user logs in. -->
  <rule id="200114" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","CRED_ACQ</regex>
    <description>Grouping Laurel AuditD CRED ACQ</description>
    <group>cred_acq,</group>
  </rule>

  <!-- USER_START -->
  <!-- This rule is triggered when a user session is started. -->
  <rule id="200115" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","USER_START</regex>
    <description>Grouping Laurel AuditD USER START</description>
    <group>user_start,</group>
  </rule>

  <!-- USER_LOGIN -->
  <!-- This rule is triggered when a user logs in. -->
  <rule id="200116" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","USER_LOGIN</regex>
    <description>Grouping Laurel AuditD USER LOGIN</description>
    <group>user_login,</group>
  </rule>

  <!-- CRED_REFR -->
  <!-- This rule is triggered when a process refreshes its credentials, such as when a user changes their password. -->
  <rule id="200117" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","CRED_REFR</regex>
    <description>Grouping Laurel AuditD CRED REFR</description>
    <group>cred_refr,</group>
  </rule>

  <!-- USER_END -->
  <!-- This rule is triggered when a user session ends. -->
  <rule id="200118" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","USER_END</regex>
    <description>Grouping Laurel AuditD USER END</description>
    <group>user_end,</group>
  </rule>

  <!-- CRED_DISP -->
  <!-- This rule is triggered when a process disposes of its credentials, such as when a user logs out or when a process ends. -->
  <rule id="200119" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","CRED_DISP</regex>
    <description>Grouping Laurel AuditD CRED DISP</description>
    <group>cred_disp,</group>
  </rule>

  <!-- BPF -->
  <!-- This rule is triggered when a Berkeley Packet Filter (BPF) event occurs. BPF is a technology used in Linux for network packet filtering and other tasks. -->
  <rule id="200120" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","BPF</regex>
    <description>Grouping Laurel AuditD BERKELEY PACKET FILTER</description>
    <group>bpf,</group>
  </rule>

  <!-- ADD_GROUP -->
  <!-- This rule is triggered when a new group is added to the system. -->
  <rule id="200121" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","ADD_GROUP</regex>
    <description>Grouping Laurel AuditD ADD GROUP</description>
    <group>add_group,</group>
  </rule>

  <!-- ADD_USER -->
  <!-- This rule is triggered when a new user is added to the system. -->
  <rule id="200122" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","ADD_USER</regex>
    <description>Grouping Laurel AuditD ADD USER</description>
    <group>add_user,</group>
  </rule>

  <!-- DEL_GROUP -->
  <!-- This rule is triggered when a group is deleted from the system. -->
  <rule id="200123" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","DEL_GROUP</regex>
    <description>Grouping Laurel AuditD DEL GROUP</description>
    <group>del_group,</group>
  </rule>

  <!-- DEL_USER -->
  <!-- This rule is triggered when a user is deleted from the system. -->
  <rule id="200124" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","ADD_USER</regex>
    <description>Grouping Laurel AuditD DEL USER</description>
    <group>del_user,</group>
  </rule>

  <!-- CRED_DISP -->
  <!-- This event is generated when a process disposes of its credentials, such as when it terminates. -->
  <rule id="200125" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","CRED_DISP</regex>
    <description>Grouping Laurel AuditD CRED_DISP</description>
    <group>cred_disp,</group>
  </rule>

  <!-- ANOM_ABEND -->
  <!-- This event is generated when a process ends abnormally. This can be useful for identifying crashes or other unexpected behavior. -->
  <rule id="200126" level="0">
    <decoded_as>json</decoded_as>
    <regex>{"ID":"\d+.\d+:\d+","ANOM_ABEND</regex>
    <description>Grouping Laurel AuditD ANOM_ABEND</description>
    <group>anom_abend,</group>
  </rule>


  <!-- https://github.com/SigmaHQ/sigma/blob/master/rules/linux/auditd/lnx_auditd_alter_bash_profile.yml -->
  <rule id="200140" level="12">
  <if_sid>200110</if_sid>
  <list field="PATH" lookup="address_match_key">etc/lists/bash_profile</list>
  <description>Detects change of user environment. Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.</description>
  <mitre>
    <id>T1546</id>
  </mitre>
  <group>path,</group>
  </rule>

  <!-- https://github.com/SigmaHQ/sigma/blob/master/rules/linux/auditd/lnx_auditd_susp_c2_commands.yml -->
  <rule id="200178" level="12">
  <if_sid>200110</if_sid>
  <field name="SYSCALL.key">susp_activity</field>
  <description>Detects suspicious activities as declared by Florian Roth in its 'Best Practice Auditd Configuration'. This includes the detection of the following commands; wget, curl, base64, nc, netcat, ncat, ssh, socat, wireshark, rawshark, rdesktop, nmap.</description>
  <group>syscall,</group>
  </rule>

</group>
